Метод проверяет, является ли число степенью тройки:
public class PowerOfThree {
    public static Boolean isPowerOfThree(int number) {
        for (int x = 1; x <= number; x = x * 3) // или x *= 3
        {
            if (x == number) return true;
        }
        return false;
    }
}

Проверка числа на простоту:
public static boolean isPrime(int number) {
    if (number < 2) {
        return false;
    }

    var divider = 2;

    while (divider <= number / 2) {
        if (number % divider == 0) {
            return false;
        }

        divider += 1;
    }

    return true;
}


Статический метод, который печатает переданное слово посимвольно в обратном порядке:
public class App {
    public static void printReversedNameBySymbol(String name) {
        var i = name.length() - 1;
        while (i >= 0) {
            System.out.println(name.charAt(i));
            i = i - 1;
        }
    }
}

Переворот строки 1: 
public static String reverse(String str) {
    var i = 0;
    // Нейтральный элемент для строк это пустая строка
    var result = "";
    while (i < str.length()) {
        // Соединяем в обратном порядке
        result = str.charAt(i) + result;
        i = i + 1;
    }

    return result;
}


Переворот строки 2 (обход строки не с первого элемента по последний, а наоборот):
public class App {
    public static String reverse(String str) {
        var i = str.length() - 1;
        var result = "";
        while (i >= 0) {
            result = result + str.charAt(i);
            i = i - 1;
        }

        return result;
    }
}
